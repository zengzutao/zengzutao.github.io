{"meta":{"title":"个人博客","subtitle":"学习心得","description":"个人博客 JS NodeJs","author":"Jack","url":"http://blog.zengzutao.com"},"pages":[{"title":"","date":"2018-06-04T11:21:12.273Z","updated":"2018-06-04T11:21:12.273Z","comments":true,"path":"about/index.html","permalink":"http://blog.zengzutao.com/about/index.html","excerpt":"","text":"关于我从事 WEB 开发，主要开发语言 NODEJS，熟悉使用 Express、Pomelo 等主流框架。 对服务端、前端、数据分析等技能有所了解。 热爱开源项目、热爱新技术、热爱新事物。 关于工作城市：深圳 关于学习正在终身学习的路上…学习方向：Python (AI)、NodeJs(Blockchain) 关于座右铭 The Harder You Work, The Luckier You Will Be. (越努力，越幸运) 关于爱好热爱运动，尤其喜爱羽毛球、阅读、电影（Top250）、旅行。 联系我 Email: zutaozeng@gmail.com GitHub: ZengZuTao"}],"posts":[{"title":"VIM日常","slug":"vim","date":"2018-06-05T03:50:37.047Z","updated":"2018-06-06T02:31:32.382Z","comments":true,"path":"2018/06/05/vim/","link":"","permalink":"http://blog.zengzutao.com/2018/06/05/vim/","excerpt":"","text":"红军不怕远征难，万水千山只等闲。 —毛泽东 一、光标和编辑 光标在屏幕文本中的移动既可以用箭头键，也可以使用 hjkl 字母键。h (左移)、j (下行)、k (上行)、l (右移) 欲进入 Vim 编辑器(从命令行提示符)，请输入：vim 文件名 &lt;回车&gt; 欲退出 Vim 编辑器，请输入 ESC键 :q! &lt;回车&gt; 放弃所有改动。或者输入 ESC键 :wq &lt;回车&gt; 保存改动。 在正常模式下删除光标所在位置的字符，请按： x 欲插入或添加文本，请输入：12i 输入欲插入文本 ESC键 在光标前插入文本A 输入欲添加文本 ESC键 在一行后添加文本 二、删除和撤销 欲从当前光标删除至下一个单词，请输入：dw 欲从当前光标删除至当前行末尾，请输入：d$ 欲删除整行，请输入：dd 欲重复一个动作，请在它前面加上一个数字：2w 在正常模式下修改命令的格式是：1operator [number] motion 其中：123operator - 操作符，代表要做的事情，比如 d 代表删除[number] - 可以附加的数字，代表动作重复的次数motion - 动作，代表在所操作的文本上的移动，例如 w 代表单词(word)，$ 代表行末等等。 欲移动光标到行首，请按数字0键：0 欲撤消以前的操作，请输入：u (小写的u)欲撤消在一行中所做的改动，请输入：U (大写的U)欲撤消以前的撤消命令，恢复以前的操作结果，请输入：CTRL-R 三、字符更新 要重新置入已经删除的文本内容，请按小写字母 p 键。该操作可以将已删除的文本内容置于光标之后。如果最后一次删除的是一个整行，那么该行将置于当前光标所在行的下一行。 要替换光标所在位置的字符，请输入小写的 r 和要替换掉原位置字符的新字符即可。 更改类命令允许您改变从当前光标所在位置直到动作指示的位置中间的文本。比如输入 ce(cw) 可以替换当前光标到单词的末尾的内容；输入 c$ 可以替换当前光标到行末的内容。 更改类命令的格式是：c [number] motion 四、文件状态及替换 CTRL-G 用于显示当前光标所在位置和文件状态信息。G 用于将光标跳转至文件最后一行。先敲入一个行号然后输入大写 G 则是将光标移动至该行号代表的行。gg 用于将光标跳转至文件第一行。 输入 / 然后紧随一个字符串是在当前所编辑的文档中正向查找该字符串。输入 ? 然后紧随一个字符串则是在当前所编辑的文档中反向查找该字符串。完成一次查找之后按 n 键是重复上一次的命令，可在同一方向上查找下一个匹配字符串所在；或者按大写 N 向相反方向查找下一匹配字符串所在。CTRL-O 带您跳转回较旧的位置，CTRL-I 则带您到较新的位置。 如果光标当前位置是括号(、)、[、]、{、}，按 % 会将光标移动到配对的括号上。 在一行内替换头一个字符串 old 为新的字符串 new，请输入 :s/old/new在一行内替换所有的字符串 old 为新的字符串 new，请输入 :s/old/new/g在两行内替换所有的字符串 old 为新的字符串 new，请输入 :#,#s/old/new/g在文件内替换所有的字符串 old 为新的字符串 new，请输入 :%s/old/new/g进行全文替换时询问用户确认每个替换需添加 c 标志 :%s/old/new/gc 五、文件操作 :!command 用于执行一个外部命令 command。请看一些实际例子：123(MS-DOS) (Unix):!dir :!ls - 用于显示当前目录的内容。:!del FILENAME :!rm FILENAME - 用于删除名为 FILENAME :w FILENAME 可将当前 VIM 中正在编辑的文件保存到名为 FILENAME 的文件中。 v motion :w FILENAME 可将当前编辑文件中可视模式下选中的内容保存到文件FILENAME 中。 :r FILENAME 可提取磁盘文件 FILENAME 并将其插入到当前文件的光标位置后面。 :r !dir 可以读取 dir 命令的输出并将其放置到当前文件的光标位置后面。 六、打开及设置 输入小写的 o 可以在光标下方打开新的一行并进入插入模式。输入大写的 O 可以在光标上方打开新的一行。 输入小写的 a 可以在光标所在位置之后插入文本。输入大写的 A 可以在光标所在行的行末之后插入文本。 e 命令可以使光标移动到单词末尾。 操作符 y 复制文本，p 粘贴先前复制的文本。 输入大写的 R 将进入替换模式，直至按 ESC 键回到正常模式。 输入 :set xxx 可以设置 xxx 选项。一些有用的选项如下：123&apos;ic&apos; &apos;ignorecase&apos; 查找时忽略字母大小写&apos;is&apos; &apos;incsearch&apos; 查找短语时显示部分匹配&apos;hls&apos; &apos;hlsearch&apos; 高亮显示所有的匹配短语 选项名可以用完整版本，也可以用缩略版本。 在选项前加上 no 可以关闭选项： :set noic 七、帮助命令 输入 :help 或者按 F1 键或 Help 键可以打开帮助窗口。 输入 :help cmd 可以找到关于 cmd 命令的帮助。 输入 CTRL-W CTRL-W 可以使您在窗口之间跳转。 输入 :q 以关闭帮助窗口 您可以创建一个 vimrc 启动脚本文件用来保存您偏好的设置。 当输入 : 命令时，按 CTRL-D 可以查看可能的补全结果。按 \\ 可以使用一个补全。 备注 vim用户手册命令(:help user-manual)","categories":[{"name":"VIM","slug":"VIM","permalink":"http://blog.zengzutao.com/categories/VIM/"}],"tags":[{"name":"VIM","slug":"VIM","permalink":"http://blog.zengzutao.com/tags/VIM/"}]},{"title":"Hexo环境搭建及文章置顶","slug":"hexo","date":"2018-05-30T10:28:27.531Z","updated":"2018-06-05T01:40:50.121Z","comments":true,"path":"2018/05/30/hexo/","link":"","permalink":"http://blog.zengzutao.com/2018/05/30/hexo/","excerpt":"","text":"路漫漫其修远兮，吾将上下而求索。 —屈原 环境搭建NVM安装及Node安装源配置（使用国内镜像）123456下载NVM并安装，NVM下载地址：https://github.com/coreybutler/nvm-windows/releases配置node安装源：nvm node_mirror https://npm.taobao.org/mirrors/node/配置npm安装源：nvm npm_mirror https://npm.taobao.org/mirrors/npm/使用NVM安装Node：nvm install nodejs-version使用node：nvm use nodejs-version安装yarn：https://yarnpkg.com/latest.msi Hexo安装和更换博客主题1234安装Hexo命令行工具：npm install hexo-cli -g新建Hexo项目：hexo init blog下载主题文件放置到blog中的themes目录下在blog的根目录下找到 _config.yml 配置文件将 theme: 你想安装的主题 More info: More 博客部署及搜索1234博客静态文件生成：hexo generate 简写：hexo g博客文件本地预览：hexo server 简写：hexo s部署：将生成好的静态文件上传至配置好的服务中即可;安装搜索插件(需修改配置文件)：npm i -S hexo-generator-json-content More info: More 文章置顶1234567891011121314找到该文件：generator.js(node_modules/hexo-generator-index/lib/generator.js)在generator.js中添加如下代码：posts.data = posts.data.sort(function(first, second) &#123; if (first.top &amp;&amp; second.top) &#123; // 两篇文章top都有定义 return first.top == second.top ? second.date - first.date : second.top - first.top //若top值一样则按照文章日期降序排, 否则按照top值降序排 &#125; else if (first.top &amp;&amp; !second.top) &#123; // 以下是只有一篇文章top有定义，将有top的排在前面 return -1; &#125; else if (!first.top &amp;&amp; second.top) &#123; return 1; &#125; else &#123; return second.date - first.date; // 都没定义top，按照文章日期降序排 &#125;&#125;);在文章头部加入 top: 数字；值越大，文章越靠前;","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://blog.zengzutao.com/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://blog.zengzutao.com/tags/Hexo/"},{"name":"文章置顶","slug":"文章置顶","permalink":"http://blog.zengzutao.com/tags/文章置顶/"}]},{"title":"PWA 和 ServiceWorker","slug":"index","date":"2018-05-30T07:55:35.364Z","updated":"2018-06-05T03:51:29.299Z","comments":true,"path":"2018/05/30/index/","link":"","permalink":"http://blog.zengzutao.com/2018/05/30/index/","excerpt":"","text":"雄关漫道真如铁，而今迈步从头越。 —毛泽东 Service Worker一、定义1.Chrome 团队提出和力推的一个 WEB API。2.用于给 web 应用提供高级的可持续的后台处理能力。 二、特点1.本质上充当Web应用程序与浏览器之间的代理服务器。2.能够创建有效的离线体验。3.只能使用HTTPS，拦截网络请求。4.允许访问推送通知和后台同步API。5.不能操作页面 DOM,但可以通过事件机制来处理。6.结合 Fetch、Cache、Push、postMessage 和 Notification等API的能力 三、功能1.离线缓存。2.消息推送。3.静默更新。 四、生命周期1.下载。2.安装。3.激活。 备注：install -&gt; installed -&gt; actvating -&gt; Active -&gt; Activated -&gt; Redundant 五、使用场景1.后台数据同步。2.响应来自其它源的资源请求。3.集中接收计算成本高的数据更新，比如地理位置和陀螺仪信息，这样多个页面就可以利用同一组数据。4.在客户端进行CoffeeScript，LESS，CJS/AMD等模块编译和依赖管理（用于开发目的）。5.后台服务钩子。6.自定义模板用于特定URL模式。7.性能增强，比如预取用户可能需要的资源，比如相册中的后面数张图片。 PWA（谷歌）一、定义1.Progressive Web Apps 渐进式增强 WEB 应用。2.Service Worker API 为核心实现的 web 应用。 二、特点1.渐进增强 – 能够让每一位用户使用，无论用户使用什么浏览器，因为它是始终以渐进增强为原则。2.响应式用户界面 – 适应任何环境：桌面电脑，智能手机，笔记本电脑，或者其他设备。3.不依赖网络连接 – 通过 Service Workers 可以在离线或者网速极差的环境下工作。4.类原生应用 – 有像原生应用般的交互和导航给用户原生应用般的体验，因为它是建立在 app shell model 上的。5.持续更新 – 受益于 Service Worker 的更新进程，应用能够始终保持更新。6.安全 – 通过 HTTPS 来提供服务来防止网络窥探，保证内容不被篡改。7.可发现 – 得益于 W3C manifests 元数据和 Service Worker 的登记，让搜索引擎能够找到 web 应用。8.再次访问 – 通过消息推送等特性让用户再次访问变得容易。9.可安装 – 允许用户保留对他们有用的应用在主屏幕上，不需要通过应用商店。10.可连接性 – 通过 URL 可以轻松分享应用，不用复杂的安装即可运行。 参考 Service Worker的使用 、安全、桌面图标下次详谈 http://lzw.me/a/pwa-service-worker.html https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API","categories":[{"name":"ServiceWorker","slug":"ServiceWorker","permalink":"http://blog.zengzutao.com/categories/ServiceWorker/"}],"tags":[{"name":"ServiceWorker","slug":"ServiceWorker","permalink":"http://blog.zengzutao.com/tags/ServiceWorker/"},{"name":"PWA","slug":"PWA","permalink":"http://blog.zengzutao.com/tags/PWA/"}]}]}