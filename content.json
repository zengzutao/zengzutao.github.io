{"meta":{"title":"个人博客","subtitle":"学习心得","description":"个人博客 JS NodeJs","author":"Jack","url":"http://blog.zengzutao.com"},"pages":[{"title":"","date":"2018-06-04T11:19:25.560Z","updated":"2018-06-04T11:19:25.560Z","comments":true,"path":"about/index.html","permalink":"http://blog.zengzutao.com/about/index.html","excerpt":"","text":"关于我从事 WEB 开发，主要开发语言 NODEJS，熟悉使用 Express、Pomelo 等主流框架。 对服务端、前端、数据分析等技能有所了解。 热爱开源项目、热爱新技术、热爱新事物。 关于工作城市：深圳 关于学习正在往终身学习者前进…学习方向：Python (AI)、NodeJs(Blockchain) 关于座右铭 The Harder You Work, The Luckier You Will Be. (越努力，越幸运) 关于爱好热爱运动，尤其喜爱羽毛球、阅读、电影（Top250）、旅行。 联系我 Email: zutaozeng@gmail.com GitHub: ZengZuTao"}],"posts":[{"title":"Hexo环境搭建及文章置顶","slug":"hexo","date":"2018-05-30T10:28:27.531Z","updated":"2018-06-04T11:04:21.697Z","comments":true,"path":"2018/05/30/hexo/","link":"","permalink":"http://blog.zengzutao.com/2018/05/30/hexo/","excerpt":"","text":"路漫漫其修远兮，吾将上下而求索。 —屈原 环境搭建NVM安装及Node安装源配置（使用国内镜像）12345下载NVM并安装，NVM下载地址：https://github.com/coreybutler/nvm-windows/releases配置node安装源：nvm node_mirror https://npm.taobao.org/mirrors/node/配置npm安装源：nvm npm_mirror https://npm.taobao.org/mirrors/npm/使用NVM安装Node：nvm install nodejs-version使用node：nvm use nodejs-version Hexo安装和更换博客主题1234安装Hexo命令行工具：npm install hexo-cli -g新建Hexo项目：hexo init blog下载主题文件放置到blog中的themes目录下在blog的根目录下找到 _config.yml 配置文件将 theme: 你想安装的主题 More info: More 博客部署及搜索1234博客静态文件生成：hexo generate 简写：hexo g博客文件本地预览：hexo server 简写：hexo s部署：将生成好的静态文件上传至配置好的服务中即可;安装搜索插件(需修改配置文件)：npm i -S hexo-generator-json-content More info: More 文章置顶1234567891011121314找到该文件：generator.js(node_modules/hexo-generator-index/lib/generator.js)在generator.js中添加如下代码：posts.data = posts.data.sort(function(first, second) &#123; if (first.top &amp;&amp; second.top) &#123; // 两篇文章top都有定义 return first.top == second.top ? second.date - first.date : second.top - first.top //若top值一样则按照文章日期降序排, 否则按照top值降序排 &#125; else if (first.top &amp;&amp; !second.top) &#123; // 以下是只有一篇文章top有定义，将有top的排在前面 return -1; &#125; else if (!first.top &amp;&amp; second.top) &#123; return 1; &#125; else &#123; return second.date - first.date; // 都没定义top，按照文章日期降序排 &#125;&#125;);在文章头部加入 top: 数字；值越大，文章越靠前;","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://blog.zengzutao.com/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://blog.zengzutao.com/tags/Hexo/"},{"name":"文章置顶","slug":"文章置顶","permalink":"http://blog.zengzutao.com/tags/文章置顶/"}]},{"title":"PWA 和 ServiceWorker","slug":"index","date":"2018-05-30T07:55:35.364Z","updated":"2018-06-04T10:58:07.449Z","comments":true,"path":"2018/05/30/index/","link":"","permalink":"http://blog.zengzutao.com/2018/05/30/index/","excerpt":"","text":"雄关漫道真如铁，而今迈步从头越。 —毛泽东 Service Worker一、定义1.Chrome 团队提出和力推的一个 WEB API。2.用于给 web 应用提供高级的可持续的后台处理能力。 二、特点1.本质上充当Web应用程序与浏览器之间的代理服务器。2.能够创建有效的离线体验。3.只能使用HTTPS，拦截网络请求。4.允许访问推送通知和后台同步API。5.不能操作页面 DOM,但可以通过事件机制来处理。6.结合 Fetch、Cache、Push、postMessage 和 Notification等API的能力 三、功能1.离线缓存。2.消息推送。3.静默更新。 四、生命周期1.下载。2.安装。3.激活。 备注：install -&gt; installed -&gt; actvating -&gt; Active -&gt; Activated -&gt; Redundant 五、使用场景1.后台数据同步。2.响应来自其它源的资源请求。3.集中接收计算成本高的数据更新，比如地理位置和陀螺仪信息，这样多个页面就可以利用同一组数据。4.在客户端进行CoffeeScript，LESS，CJS/AMD等模块编译和依赖管理（用于开发目的）。5.后台服务钩子。6.自定义模板用于特定URL模式。7.性能增强，比如预取用户可能需要的资源，比如相册中的后面数张图片。 PWA（谷歌）一、定义1.Progressive Web Apps 渐进式增强 WEB 应用。2.Service Worker API 为核心实现的 web 应用。 二、特点1.渐进增强 – 能够让每一位用户使用，无论用户使用什么浏览器，因为它是始终以渐进增强为原则。2.响应式用户界面 – 适应任何环境：桌面电脑，智能手机，笔记本电脑，或者其他设备。3.不依赖网络连接 – 通过 Service Workers 可以在离线或者网速极差的环境下工作。4.类原生应用 – 有像原生应用般的交互和导航给用户原生应用般的体验，因为它是建立在 app shell model 上的。5.持续更新 – 受益于 Service Worker 的更新进程，应用能够始终保持更新。6.安全 – 通过 HTTPS 来提供服务来防止网络窥探，保证内容不被篡改。7.可发现 – 得益于 W3C manifests 元数据和 Service Worker 的登记，让搜索引擎能够找到 web 应用。8.再次访问 – 通过消息推送等特性让用户再次访问变得容易。9.可安装 – 允许用户保留对他们有用的应用在主屏幕上，不需要通过应用商店。10.可连接性 – 通过 URL 可以轻松分享应用，不用复杂的安装即可运行。 参考 Service Worker的使用 、安全、桌面图标下次详谈 http://lzw.me/a/pwa-service-worker.html https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API","categories":[{"name":"ServiceWorker","slug":"ServiceWorker","permalink":"http://blog.zengzutao.com/categories/ServiceWorker/"}],"tags":[{"name":"ServiceWorker","slug":"ServiceWorker","permalink":"http://blog.zengzutao.com/tags/ServiceWorker/"},{"name":"PWA","slug":"PWA","permalink":"http://blog.zengzutao.com/tags/PWA/"}]}]}